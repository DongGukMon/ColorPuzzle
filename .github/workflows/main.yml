name: Publish iOS and Android App to firebase app distribution
on:
  push:
    branches: [master]

jobs:
  release-ios:
    name: Build and release iOS app
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: '18.x'
      - uses: actions/setup-ruby@v1
        with:
          ruby-version: '2.x'
      - name: gem install
        run: gem install bundler -v 1.17.2
      - name: Install Fastlane
        run: cd ios && bundle install && cd ..
      - name: Install packages
        run: yarn install
      - name: Install pods
        run: cd ios && pod install && cd ..
      - name: Generate Environment Variables File of Root Folder
        run: |
          echo "API_KEY=$API_KEY" >> .env
          echo "AUTH_DOMAIN=$AUTH_DOMAIN" >> .env
          echo "PROJECT_ID=$PROJECT_ID" >> .env
          echo "STORAGE_BUCKET=$STORAGE_BUCKET" >> .env
          echo "MESSAGING_SENDER_ID=$MESSAGING_SENDER_ID" >> .env
          echo "APP_ID=$APP_ID" >> .env
          echo "DATABASE_URL=$DATABASE_URL" >> .env
        env:
          API_KEY: ${{secrets.API_KEY}}
          AUTH_DOMAIN: ${{secrets.AUTH_DOMAIN}}
          PROJECT_ID: ${{secrets.PROJECT_ID}}
          STORAGE_BUCKET: ${{secrets.STORAGE_BUCKET}}
          MESSAGING_SENDER_ID: ${{secrets.MESSAGING_SENDER_ID}}
          APP_ID: ${{secrets.APP_ID}}
          DATABASE_URL: ${{secrets.DATABASE_URL}}
      - name: Generate Environment Variables File of ios fastlane
        run: |
          cd ios && cd fastlane
          echo "FASTLANE_APPLE_APPLICATION_SPECIFIC_PASSWORD=$FASTLANE_APPLE_APPLICATION_SPECIFIC_PASSWORD" >> .env.default
          echo "MATCH_KEYCHAIN_PASSWORD=$MATCH_KEYCHAIN_PASSWORD" >> .env.default
          echo "GOOGLE_APPLICATION_CREDENTIALS=$GOOGLE_APPLICATION_CREDENTIALS" >> .env.default
          echo "FIREBASE_APP_ID=$FIREBASE_APP_ID_IOS" >> .env.default
          echo "MATCH_GIT_PRIVATE_KEY=#{Dir.pwd}/fastlane/git_private_key" >> .env.default
          cd .. && cd ..
        env:
          FASTLANE_APPLE_APPLICATION_SPECIFIC_PASSWORD: ${{secrets.FASTLANE_APPLE_APPLICATION_SPECIFIC_PASSWORD}}
          MATCH_KEYCHAIN_PASSWORD: ${{secrets.MATCH_KEYCHAIN_PASSWORD}}
          GOOGLE_APPLICATION_CREDENTIALS: ${{secrets.GOOGLE_APPLICATION_CREDENTIALS}}
          FIREBASE_APP_ID_IOS: ${{secrets.FIREBASE_APP_ID_IOS}}
      - name: Generate Google Service plist file
        run: |
          cd ios && echo $GOOGLE_SERVICES_IOS | base64 --decode >> GoogleService-Info.plist && cd ..
        env:
          GOOGLE_SERVICES_IOS: ${{secrets.GOOGLE_SERVICES_IOS}}
      - name: Generate firebase login credencials file
        run: |
          cd ios && cd fastlane && echo $FIREBASE_LOGIN_CREDENCIALS | base64 --decode >> firebase_login_credentials.json && cd .. && cd ..
        env:
          FIREBASE_LOGIN_CREDENCIALS: ${{secrets.FIREBASE_LOGIN_CREDENCIALS}}
      - name: Execute Fastlane command
        run: cd ios && fastlane beta
  release-android:
    name: Build and release Android app
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: '18.x'
      - uses: actions/setup-ruby@v1
        with:
          ruby-version: '2.x'
      - name: gem install
        run: gem install bundler -v 1.17.2
      - name: Install Fastlane
        run: cd android && bundle install && cd ..
      - name: Install packages
        run: yarn install
      - name: Generate Environment Variables File of Root Folder
        run: |
          echo "API_KEY=$API_KEY" >> .env
          echo "AUTH_DOMAIN=$AUTH_DOMAIN" >> .env
          echo "PROJECT_ID=$PROJECT_ID" >> .env
          echo "STORAGE_BUCKET=$STORAGE_BUCKET" >> .env
          echo "MESSAGING_SENDER_ID=$MESSAGING_SENDER_ID" >> .env
          echo "APP_ID=$APP_ID" >> .env
          echo "DATABASE_URL=$DATABASE_URL" >> .env
        env:
          API_KEY: ${{secrets.API_KEY}}
          AUTH_DOMAIN: ${{secrets.AUTH_DOMAIN}}
          PROJECT_ID: ${{secrets.PROJECT_ID}}
          STORAGE_BUCKET: ${{secrets.STORAGE_BUCKET}}
          MESSAGING_SENDER_ID: ${{secrets.MESSAGING_SENDER_ID}}
          APP_ID: ${{secrets.APP_ID}}
          DATABASE_URL: ${{secrets.DATABASE_URL}}
      - name: Generate Environment Variables File of android fastlane
        run: |
          cd android && cd fastlane
          echo "GOOGLE_APPLICATION_CREDENTIALS=$GOOGLE_APPLICATION_CREDENTIALS" >> .env.default
          echo "FIREBASE_APP_ID=$FIREBASE_APP_ID_ANDROID" >> .env.default
          cd .. && cd ..
        env:
          GOOGLE_APPLICATION_CREDENTIALS: ${{secrets.GOOGLE_APPLICATION_CREDENTIALS}}
          FIREBASE_APP_ID_ANDROID: ${{secrets.FIREBASE_APP_ID_ANDROID}}
      - name: Generate Google Service json file
        run: |
          cd android && cd app && echo $GOOGLE_SERVICES_ANDROID | base64 --decode >> google-services.json && cd .. && cd ..
        env:
          GOOGLE_SERVICES_ANDROID: ${{secrets.GOOGLE_SERVICES_ANDROID}}
      - name: Generate Release KeyStore file
        run: |
          cd android && cd app && echo $RELEASE_KEYSTORE_BASE64 | base64 --decode >> release_key.keystore && cd .. && cd ..
        env:
          RELEASE_KEYSTORE_BASE64: ${{secrets.RELEASE_KEYSTORE_BASE64}}
      - name: Generate Gradle Properties file
        run: |
          cd android && echo $GRADLE_PROPERTIES | base64 --decode >> gradle.properties && cd ..
        env:
          GRADLE_PROPERTIES: ${{secrets.GRADLE_PROPERTIES}}
      - name: Generate firebase login credencials file
        run: |
          cd android && cd fastlane && echo $FIREBASE_LOGIN_CREDENCIALS | base64 --decode >> firebase_login_credentials.json && cd .. && cd ..
        env:
          FIREBASE_LOGIN_CREDENCIALS: ${{secrets.FIREBASE_LOGIN_CREDENCIALS}}
      - name: Generate firebase json secret file
        run: |
          cd android && cd fastlane && echo $JSON_SECRET_FILE | base64 --decode >> json_secret_file.json && cd .. && cd ..
        env:
          JSON_SECRET_FILE: ${{secrets.JSON_SECRET_FILE}}
      - name: Execute Fastlane command
        run: cd android && fastlane beta
